Suppose you have a random list of people standing in a queue. Each person is described by a pair of integers (h, k), where h is the height of the person and k is the number of people in front of this person who have a height greater than or equal to h. Write an algorithm to reconstruct the queue.

Note:
The number of people is less than 1,100.

 

class Solution {
    public int[][] reconstructQueue(int[][] people) {
        int[][] ans = new int[people.length][2];
        Arrays.sort(people, (p1,p2)-> (p1[0] == p2[0]) ? p1[1] - p2[1] : p1[0] - p2[0]);
        int count = -1;
        int[] arr = new int[2];
        arr[0] = -1;
        arr[1] = 2;
        //[[4,4],[5,0],[5,2],[6,1],[7,0],[7,1]]
        Arrays.fill(ans,arr);
        for(int i =0;i<people.length;i++){
            count = people[i][1];
            int j=0;
            boolean isPlaced = false;
            while(!isPlaced){
                if(ans[j][0] == -1 && count == 0){
                    ans[j] = people[i];
                    isPlaced = true;
                }
                else if((ans[j][0] >= people[i][0] || ans[j][0] == -1) && count!=0){
                    count--;
                }
                j++;
            }
        }
        
        return ans;
    }
}
